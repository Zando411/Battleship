(()=>{"use strict";var t={d:(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};function e(t,e,n){return{isPlaced:!1,key:t,name:e,length:n,vertical:!1,hits:0,sunk:!1,hit:function(){this.hits++,this.sinkCheck()},sinkCheck:function(){this.hits>=this.length?this.sunk=!0:this.sunk=!1}}}t.d({},{Uo:()=>w,DH:()=>C,hM:()=>P,t:()=>B});var n=10,r=10;function a(){for(var t=new Array(n),e=0;e<t.length;e++){t[e]=new Array(r);for(var a=0;a<t[e].length;a++)t[e][a]={isHit:!1,hasShip:null}}return t}function i(){for(var t=["Aircraft Carrier","Battleship","Cruiser","Destroyer","Destroyer","Submarine","Submarine"],n=[5,4,3,2,2,1,1],r=[0,1,2,3,4,5,6],a=[],i=0;i<7;i++){var o=e(r[i],t[i],n[i]);a.push(o)}return a}function o(t){return t.every((function(t){return t.sunk}))}function l(t,e,a){return e>0&&null!==a[e-1][t].hasShip||e<n-1&&null!==a[e+1][t].hasShip||t>0&&null!==a[e][t-1].hasShip||t<r-1&&null!==a[e][t+1].hasShip||e>0&&t>0&&null!==a[e-1][t-1].hasShip||e>0&&t<r-1&&null!==a[e-1][t+1].hasShip||e<n-1&&t>0&&null!==a[e+1][t-1].hasShip||e<n-1&&t<r-1&&null!==a[e+1][t+1].hasShip}function s(t,e,a,i){var o=e.key,s=e.length,c=e.vertical,u=function(t,e,a,i,o){var s=t.length;if(i){if(a+s>n)return!1;for(var c=0;c<s;c++)if(l(e,a+c,o))return!1}else{if(e+s>r)return!1;for(var u=0;u<s;u++)if(l(e+u,a,o))return!1}return!0}(e,a,i,c,t);if(u){if(c)for(var d=0;d<s;d++)t[i+d][a].hasShip=o;else for(var h=0;h<s;h++)t[i][a+h].hasShip=o;return e.isPlaced=!0,!0}return!1}function c(t){var e=t.ships,n=t.gameboard;function r(t){t=function(t,e){return e.vertical=!!t,e}(Math.random()>=.5,t);var e={x:Math.floor(10*Math.random()),y:Math.floor(10*Math.random())};s(n,t,e.x,e.y)||r(t)}t.clearBoard(),e.forEach((function(t){t.isPlaced=!1,t.vertical=!1})),e.forEach((function(t){r(t)}))}var u,d,h=!1,f=null;function p(t){for(var e=document.getElementById(t);e.firstChild;)e.removeChild(e.firstChild)}function v(t){p("playerGameboard");var e=document.getElementById("playerGameboard"),n=0;t.gameboard.forEach((function(t){var r=0;t.forEach((function(t){var a=document.createElement("div");a.classList.add("gridPart"),a.dataset.contains=t.hasShip,a.dataset.cellHit=t.isHit,a.dataset.y=n,a.dataset.x=r,null!==t.hasShip&&(a.style.backgroundColor="#B0BEC5"),!0===t.isHit&&(a.style.backgroundColor="#FFD97D"),null!==t.hasShip&&!0===t.isHit&&(a.style.backgroundColor="#EE6055"),e.appendChild(a),r++})),n++}))}function m(t){p("opponentGameboard");var e=document.getElementById("opponentGameboard"),n=0;t.gameboard.forEach((function(t){var r=0;t.forEach((function(t){var a=document.createElement("div");a.classList.add("gridPart"),a.dataset.contains=t.hasShip,a.dataset.cellHit=t.isHit,a.dataset.y=n,a.dataset.x=r,a.addEventListener("click",(function(t){var e,n;e=t.target.dataset.x,n=t.target.dataset.y,!1===h&&(P.takeTurn(e,n),C.takeTurn()),!0===h&&(g("winner-popup","block"),document.getElementById("winningName").textContent=f)})),!0===t.isHit&&(a.style.backgroundColor="#FFD97D"),null!==t.hasShip&&!0===t.isHit&&(a.style.backgroundColor="#EE6055"),e.appendChild(a),r++})),n++}))}function y(t){p("playerShips");var e=document.getElementById("playerShips");t.forEach((function(t){var n=document.createElement("div");n.classList.add("ship"),n.dataset.shipKey=t.key,n.dataset.isPlaced=t.isPlaced,n.dataset.isVertical=t.vertical,!0===t.isPlaced?(n.setAttribute("draggable",!1),n.classList.add("placed")):(n.setAttribute("draggable",!0),n.classList.add("draggable"));for(var r=0;r<t.length;r++){var a=document.createElement("div");a.classList.add("shipPart"),a.dataset.partIndex=r,n.appendChild(a)}e.appendChild(n)})),function(t){document.querySelectorAll(".draggable").forEach((function(e){e.addEventListener("dragstart",(function(t){d=t.target.dataset.shipKey,e.classList.add("dragging")})),e.addEventListener("dragend",(function(){e.classList.remove("dragging")})),e.addEventListener("mousedown",(function(t){u=Number(t.target.dataset.partIndex)})),e.addEventListener("click",(function(e){console.log(e.currentTarget);var n=e.currentTarget.dataset.shipKey,r=t[n];console.log(r),console.log(r.vertical),r.vertical=!r.vertical,y(t)}))}))}(t)}function g(t,e){document.getElementById(t).style.display=e}function b(){document.getElementById("playerName").textContent=P.name}function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function S(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function k(t,e,n){return(e=function(t){var e=function(t,e){if("object"!==E(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===E(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var P=function(){var t,e="Player",n=a(),r=i(),l=!1;function s(){for(var t=0;t<n.length;t++)for(var e=0;e<n[t].length;e++)n[t][e].hasShip=null,n[t][e].isHit=!1}function u(t,n){C.receiveAttack(t,n),o(C.ships)&&(f="".concat(e),h=!0),m(C)}return k(t={name:e,gameboard:n,ships:r,takeTurn:u,allShipsPlaced:l,placeShips:function(){c(this)},validateAllShipsPlaced:function(){var t=function(t){return t.every((function(t){return t.isPlaced}))}(r);if(!0!==t)throw new Error("Please place all ships on the board");l=!0},clearBoard:s},"takeTurn",u),k(t,"receiveAttack",(function(t,e){if(!0===n[e][t].isHit)throw new Error("This square has already been hit!");if(n[e][t].isHit=!0,null!==n[e][t].hasShip){var a=n[e][t].hasShip;r[a].hit()}})),k(t,"resetVariables",(function(){e="Player",s(),l=!1,r.forEach((function(t){t.isPlaced=!1,t.vertical=!1,t.hits=0,t.sunk=!1}))})),t}(),C=function(){var t,e="Computer",n=new Set,r=a(),l=i(),s=!1;function u(){var t=Math.floor(10*Math.random()),e=Math.floor(10*Math.random());return n.has("".concat(t,",").concat(e))?u():(n.add("".concat(t,",").concat(e)),[t,e])}function d(){for(var t=0;t<r.length;t++)for(var e=0;e<r[t].length;e++)r[t][e].hasShip=null,r[t][e].isHit=!1}function p(){var t,n,r=(t=u(),n=2,function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,a,i,o,l=[],s=!0,c=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(l.push(r.value),l.length!==e);s=!0);}catch(t){c=!0,a=t}finally{try{if(!s&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(c)throw a}}return l}}(t,n)||function(t,e){if(t){if("string"==typeof t)return S(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?S(t,e):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[0],i=r[1];P.receiveAttack(a,i),o(P.ships)&&(f="".concat(e),h=!0),v(P)}return t={name:e,gameboard:r,ships:l,takeTurn:p,isComputer:!0,placeShips:function(){c(this)},allShipsPlaced:s,clearBoard:d,receiveAttack:function(t,e){if(!0===r[e][t].isHit)throw new Error("This square has already been hit!");if(r[e][t].isHit=!0,null!==r[e][t].hasShip){var n=r[e][t].hasShip;l[n].hit()}}},k(t,"takeTurn",p),k(t,"resetVariables",(function(){d(),s=!1,l.forEach((function(t){t.isPlaced=!1,t.vertical=!1,t.hits=0,t.sunk=!1}))})),t}();function w(){var t,e,n,r,i;b(),g("ships","flex"),g("opponent-board","none"),y(P.ships),v(i=P),function(t){var e=document.getElementById("playerGameboard");e.addEventListener("dragover",(function(t){t.preventDefault()})),e.addEventListener("dragenter",(function(t){t.preventDefault()})),e.addEventListener("drop",(function(e){e.preventDefault();var n=e.target,r=t.ships[d].vertical;console.log(r),console.log(u);var a=Number(n.dataset.x-(r?0:u)),i=Number(n.dataset.y-(r?u:0));console.log(a,i),s(t.gameboard,t.ships[d],a,i),v(t),y(t.ships)}))}(i),t=document.getElementById("clearBoard"),e=document.getElementById("startGame"),n=document.getElementById("randomBoard"),r=document.getElementById("playAgain"),t.addEventListener("click",(function(){var t;(t=P).gameboard=a(),t.allShipsPlaced=!1,t.ships.forEach((function(t){t.isPlaced=!1,t.vertical=!1})),v(t),!0!==t.isComputer&&y(t.ships)})),n.addEventListener("click",(function(){c(P),v(P),y(P.ships)})),e.addEventListener("click",(function(){var t=document.getElementById("nameInput");""!==t.value&&(P.name=t.value,t.value="",B())})),r.addEventListener("click",(function(){P.resetVariables(),C.resetVariables(),g("winner-popup","none"),w()}))}function B(){P.validateAllShipsPlaced(),b(),g("ships","none"),m(C),C.placeShips(),g("opponent-board","flex")}w()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,